## Specify the OSI Layer to which best matches each statement
# Question 'ab': Which layer best fits this statement: Responsible for routing packets among networks
ab=3
# Question 'ac': Which layer best fits this statement: Is used to abstract the network for user-oriented programmes
ac=7
# Question 'ad': Which layer best fits this statement: The layer where virtual circuits can be established
ad=4
# Question 'ae': Which layer best fits this statement: Responsible for electromagnetic spectrum allocation
ae=1
# Question 'af': Which layer best fits this statement: Serialises data structures so that they can be sent, received and correctly interpreted at the other end of a network
af=4
# Question 'ag': Which layer best fits this statement: Allows for the recovery of a lost connection
ag=5
# Question 'ah': Which layer best fits this statement: Responsible for logical link control
ah=2
# Question 'ai': Which layer best fits this statement: Responsible for closing a connection, especially where it involves multiple resources
ai=5
# Question 'aj': Which layer best fits this statement: Responsible for the correct conversion of character encodings in a session
aj=7
# Question 'ak': Which layer best fits this statement: Corrects the order of received packets, if they are received out of order
ak=4
# Question 'al': Which layer best fits this statement: Detects and reacts to congestion on network path between distant nodes
al=4
# Question 'am': Which layer best fits this statement: Responsible for selecting the best path between nodes
am=3
# Question 'an': Which layer best fits this statement: Facilitates connectionless communications between nodes on large networks
an=3
# Question 'ao': Which layer best fits this statement: Provides globally addressable identifiers for nodes on large networks
ao=3
# Question 'ap': Which layer best fits this statement: Responsible for data encryption
ap=6
# Question 'aq': Which layer best fits this statement: Provides the interface for programmes to access network services
aq=7
## Specify the OSI Layer to which each protocol corresponds
# Question 'ar': To which layer does this protocol correspond?: Fibre Channel Protocol (FCP)
ar=1
# Question 'as': To which layer does this protocol correspond?: Apple Filing Protocol (AFP)
as=6
# Question 'at': To which layer does this protocol correspond?: Short Message Peer-to-Peer (SMPP)
at=5
# Question 'au': To which layer does this protocol correspond?: Simple Service Discovery Protocol
au=7
# Question 'av': To which layer does this protocol correspond?: L2TP
av=2
# Question 'aw': To which layer does this protocol correspond?: Econet
aw=2
# Question 'ax': To which layer does this protocol correspond?: Cisco Discovery Protocol (CDP)
ax=2
# Question 'ay': To which layer does this protocol correspond?: iSCSI
ay=4
# Question 'az': To which layer does this protocol correspond?: NetBIOS
az=5
# Question 'ba': To which layer does this protocol correspond?: Server message block (SMB)
ba=2
# Question 'bb': To which layer does this protocol correspond?: Transmission Control Protocol
bb=4
# Question 'bc': To which layer does this protocol correspond?: Internet Protocol
bc=3
# Question 'bd': To which layer does this protocol correspond?: Link Aggregation Control Protocol (LACP)
bd=2
# Question 'be': To which layer does this protocol correspond?: HTTP
be=7
# Question 'bf': To which layer does this protocol correspond?: High-Level Data Link Control (HDLC)
bf=2
# Question 'bg': To which layer does this protocol correspond?: FTP
bg=7
# Question 'bh': Can applications on nodes 0 and 4 communicate?
bh=N
# Question 'bi': If an application on node 2 sends 223 bytes of byte, how large would the PDU be at layer 6?
bi=411
# Question 'bj': What is the data rate that is possible between nodes 2 and 4? {\em Provide the exact number of kilo-bits per second as your answer.} 
bj=5552
# Question 'bk': How many milli-seconds would it take node 2 to send 5187 bytes of data to node 4? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
bk=434
# Question 'bl': Can applications on nodes 3 and 0 communicate?
bl=N
# Question 'bm': If an application on node 5 sends 591 bytes of byte, how large would the PDU be at layer 5?
bm=741
# Question 'bn': What is the data rate that is possible between nodes 5 and 0? {\em Provide the exact number of kilo-bits per second as your answer.} 
bn=1877
# Question 'bo': How many milli-seconds would it take node 5 to send 1124 bytes of data to node 0? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
bo=920
# Question 'bp': Can applications on nodes 4 and 0 communicate?
bp=Y
# Question 'bq': If an application on node 1 sends 509 bytes of byte, how large would the PDU be at layer 5?
bq=700
# Question 'br': What is the data rate that is possible between nodes 1 and 0? {\em Provide the exact number of kilo-bits per second as your answer.} 
br=3634
# Question 'bs': How many milli-seconds would it take node 1 to send 7135 bytes of data to node 0? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
bs=165
# Question 'bt': Can applications on nodes 3 and 5 communicate?
bt=N
# Question 'bu': If an application on node 2 sends 142 bytes of byte, how large would the PDU be at layer 7?
bu=230
# Question 'bv': What is the data rate that is possible between nodes 2 and 5? {\em Provide the exact number of kilo-bits per second as your answer.} 
bv=5214
# Question 'bw': How many milli-seconds would it take node 2 to send 5950 bytes of data to node 5? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
bw=698
# Question 'bx': Can applications on nodes 5 and 0 communicate?
bx=N
# Question 'by': If an application on node 5 sends 646 bytes of byte, how large would the PDU be at layer 2?
by=977
# Question 'bz': What is the data rate that is possible between nodes 5 and 0? {\em Provide the exact number of kilo-bits per second as your answer.} 
bz=1010
# Question 'ca': How many milli-seconds would it take node 5 to send 1091 bytes of data to node 0? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
ca=1151
# Question 'cb': Can applications on nodes 0 and 2 communicate?
cb=Y
# Question 'cc': If an application on node 3 sends 522 bytes of byte, how large would the PDU be at layer 5?
cc=652
# Question 'cd': What is the data rate that is possible between nodes 3 and 2? {\em Provide the exact number of kilo-bits per second as your answer.} 
cd=393
# Question 'ce': How many milli-seconds would it take node 3 to send 6957 bytes of data to node 2? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
ce=1419
# Question 'cf': Can applications on nodes 3 and 1 communicate?
cf=N
# Question 'cg': If an application on node 5 sends 330 bytes of byte, how large would the PDU be at layer 5?
cg=420
# Question 'ch': What is the data rate that is possible between nodes 5 and 1? {\em Provide the exact number of kilo-bits per second as your answer.} 
ch=5266
# Question 'ci': How many milli-seconds would it take node 5 to send 2298 bytes of data to node 1? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
ci=835
# Question 'cj': Can applications on nodes 1 and 2 communicate?
cj=Y
# Question 'ck': If an application on node 3 sends 722 bytes of byte, how large would the PDU be at layer 5?
ck=914
# Question 'cl': What is the data rate that is possible between nodes 3 and 2? {\em Provide the exact number of kilo-bits per second as your answer.} 
cl=2363
# Question 'cm': How many milli-seconds would it take node 3 to send 3008 bytes of data to node 2? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
cm=1444
# Question 'cn': Can applications on nodes 1 and 4 communicate?
cn=Y
# Question 'co': If an application on node 2 sends 260 bytes of byte, how large would the PDU be at layer 6?
co=323
# Question 'cp': What is the data rate that is possible between nodes 2 and 4? {\em Provide the exact number of kilo-bits per second as your answer.} 
cp=1649
# Question 'cq': How many milli-seconds would it take node 2 to send 4126 bytes of data to node 4? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
cq=1035
# Question 'cr': Can applications on nodes 4 and 1 communicate?
cr=N
# Question 'cs': If an application on node 3 sends 654 bytes of byte, how large would the PDU be at layer 1?
cs=1026
# Question 'ct': What is the data rate that is possible between nodes 3 and 1? {\em Provide the exact number of kilo-bits per second as your answer.} 
ct=638
# Question 'cu': How many milli-seconds would it take node 3 to send 1247 bytes of data to node 1? {\em Provide the exact number of milli-seconds as your answer, rounded down to the nearest whole number.}
cu=534
## Name and describe five reliability challenges for computer networks, referring to the network layers at which these challenges either arise, or are solved.
# Question 'cv': Reliability Challenge #0
cv=Transmitting raw data (binary) efficiently and effectively.  For instance, to avoid a stream of 1's or 0's (which can impact the reliability of the data through) the PHYSICAL LAYER utilises data encoding methods such as 4b/5b in order to ensure that there is regular switching between 1's and 0's.  This also ensures that clock recovery is occuring (i.e., timing of the receiving host and sender are in sync).
# Question 'cw': Reliability Challenge #1
cw=In order to check that transmitted data is error free, error checking methods such as a checksum algorithm or CRC (cyclic redundancy check) are utilised at the DATA LINK layer to determine if a frame needs to be resent or corrected (if possible).
# Question 'cx': Reliability Challenge #2
cx=Where an application requires all data packets (i.e., to be resent if not received) and speed is not as vital (e.g., a messaging app), as opposed to where it is tolerable to have missing packets (if occasional - e.g., streaming generally uses UDP which does not resend packets) TCP is used.  More specifically, in the case where reliability of data packets is of primary concern there has to be a way to acknowledge when data has been or not been received.  Various protocols at the Transport layer allow for this via TCP.  The sliding window protocol and stop and wait protocol are methods that are used to ensure reliability of the data.
# Question 'cy': Reliability Challenge #3
cy=As wireless networks (wifi or 802.11) can overlap with other signals there is a very real possibility of interference, which could cause drop outs of slow data transfer.  This obviously occurs at the PHYSICAL LAYER.  One of the ways that this is prevented is via signal hopping or the spread spectrum technique.  Interference is also minimized through the licensing of various bands (e.g., wifi will utilise on the 2.4Ghz or 5 Ghz bands).
# Question 'cz': Reliability Challenge #4
cz=There is a reliability issues that occurs for mobile devices (nodes) with respect to the 802.11 wifi technology.  The issue is related to not all nodes being able to see each other, therefore whilst two nodes may not be able to see each other and then try to communicate through another node, the two nodes signals may collide due to an inability to see each other.  This therefore means that their signals are damaged as a result and therefore uninterpretable.  A way to solve this is through multiple access with collision avoidance.  This essential means that the sender sends a small packet indicating how much data they are looking to send, which is noted by the surrounding nodes - which can then attempt to avoid any collisions.
# Question 'da': Reliable delivery of streaming video 
BEGIN:da
Video in both of these ways requires that the content be continuous (i.e., at any point in time the downloaded portion needs to be in sequence so as to not jump about), this is even more important with respect to conferencing where multiple users are interacting via video.  For instance when a person on one video makes a gesture or voices something it needs to be immediate (without delay) so as to allow for acceptable real-time communication between participants.  This level of immediacy is not the same for video streaming, where user experience is not significantly impacted if they’re required to wait (e.g., for buffering) prior to the first image appearing (generally this is continuous from this point).  This is in part due to the one directional nature of video streaming compared to the bi-directional nature of video conferencing (which is interactive).

In terms of the Transport Protocol used, TCP would be unacceptable for video streaming due to this being a reliable communication method (meaning that it requires every packet to be acknowledged).  For instance, if there is an error in the data packet received it is generally unacceptable for the video to wait until that packet is retransmitted.  Although reliability is important, speed is more important in the case of video streaming, where small discrepancies in the video quality is preferable over really slow streaming.  Video conferencing on the other hand presents a combination, where the video streaming needs to be fast enough to allow for gestures to be viewed in real time (together with messages and other interactions), retransmission of data (in the case of TCP) would be of no use in the context of time.  
END:da
# Question 'db': In which layer is security normally implemented in the OSI layered network model? Choose two other layers, and suggest how security might be implemented in each of those layers instead. 
BEGIN:db
Security is normally implemented at the presentation layer, as this layer is responsible for data encryption and decryption.  For instance, the Secure Multipurpose Internet Mail Extensions (S/MIME) is commonly used to encrypt e-mail messages.

Alternatively, it is common for the network layer to secure unsecured network transactions through the Internet Protocol-Security (IPsec) suite of protocols.  This allows for encrypted communication between two computers.  This utilises a session security key that is passed to the receiver in order to decrypt the data.

At the transport layer utilises the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols to improve security confidentiality, data integrity, server authentication, and client authentication.  This is primarily utilised for web-based HTTP transactions.  The sender and the receiver establish a secret key that is to be utilised for the encrypting and decrypting the data.  
END:db
